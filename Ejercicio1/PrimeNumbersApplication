package com.example.primenumbers;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.*;

import java.util.ArrayList;
import java.util.List;

@SpringBootApplication
public class PrimeNumbersApplication {
    public static void main(String[] args) {
        SpringApplication.run(PrimeNumbersApplication.class, args);
    }
}

// Controlador REST que maneja las solicitudes GET
@RestController
@RequestMapping("/api/algorithms/prime-numbers")
class PrimeNumbersController {

    // Endpoint que devuelve los primeros n números primos
    @GetMapping("/{n}")
    public List<Integer> getPrimeNumbers(@PathVariable int n) {
        if (n < 1) {
            throw new IllegalArgumentException("El número debe ser mayor que 0");
        }
        return generatePrimeNumbers(n);
    }

    // Método para generar los primeros n números primos
    private List<Integer> generatePrimeNumbers(int n) {
        List<Integer> primes = new ArrayList<>();
        int number = 2; // El primer número primo

        while (primes.size() < n) {
            if (isPrime(number)) {
                primes.add(number);
            }
            number++;
        }
        return primes;
    }

    // Método auxiliar para verificar si un número es primo
    private boolean isPrime(int num) {
        if (num < 2) {
            return false;
        }
        for (int i = 2; i <= Math.sqrt(num); i++) {
            if (num % i == 0) {
                return false;
            }
        }
        return true;
    }
}
